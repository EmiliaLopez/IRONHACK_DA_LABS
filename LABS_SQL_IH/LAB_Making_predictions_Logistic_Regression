{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2cdacd34-72af-47f1-b45d-60517233cffa",
   "metadata": {},
   "source": [
    "# In this lab, you will be using the Sakila database of movie rentals.\n",
    "\n",
    " ## In order to optimize our inventory, we would like to know which films will be rented next month and we are asked to create a model to predict it.\n",
    "\n",
    "## Create a query or queries to extract the information you think may be relevant for building the prediction model. It should include some film features and some rental features.\n",
    "- Read the data into a Pandas dataframe.\n",
    "- Analyze extracted features and transform them. You may need to encode some categorical variables, or scale numerical variables.\n",
    "- Create a query to get the list of films and a boolean indicating if it was rented last month. This would be our target variable.\n",
    "- Create a logistic regression model to predict this variable from the cleaned data.\n",
    "- Evaluate the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "fec508b3-a420-4773-be80-8a5a95a2bb51",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymysql\n",
    "from sqlalchemy import create_engine\n",
    "import getpass\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "from sklearn.preprocessing import Normalizer, StandardScaler, MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "c49aa3c8-5941-40e0-a875-14725a4b07cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      " ········\n"
     ]
    }
   ],
   "source": [
    "password = getpass.getpass()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "c5516c3c-b0ce-4ed1-a078-51051e58c2aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>title</th>\n",
       "      <th>description</th>\n",
       "      <th>release_year</th>\n",
       "      <th>language_id</th>\n",
       "      <th>original_language_id</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>rating</th>\n",
       "      <th>special_features</th>\n",
       "      <th>last_update</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>ACADEMY DINOSAUR</td>\n",
       "      <td>A Epic Drama of a Feminist And a Mad Scientist...</td>\n",
       "      <td>2006</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>6</td>\n",
       "      <td>0.99</td>\n",
       "      <td>86</td>\n",
       "      <td>20.99</td>\n",
       "      <td>PG</td>\n",
       "      <td>Deleted Scenes,Behind the Scenes</td>\n",
       "      <td>2006-02-15 05:03:42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>ACE GOLDFINGER</td>\n",
       "      <td>A Astounding Epistle of a Database Administrat...</td>\n",
       "      <td>2006</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>4.99</td>\n",
       "      <td>48</td>\n",
       "      <td>12.99</td>\n",
       "      <td>G</td>\n",
       "      <td>Trailers,Deleted Scenes</td>\n",
       "      <td>2006-02-15 05:03:42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>ADAPTATION HOLES</td>\n",
       "      <td>A Astounding Reflection of a Lumberjack And a ...</td>\n",
       "      <td>2006</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>50</td>\n",
       "      <td>18.99</td>\n",
       "      <td>NC-17</td>\n",
       "      <td>Trailers,Deleted Scenes</td>\n",
       "      <td>2006-02-15 05:03:42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>AFFAIR PREJUDICE</td>\n",
       "      <td>A Fanciful Documentary of a Frisbee And a Lumb...</td>\n",
       "      <td>2006</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>5</td>\n",
       "      <td>2.99</td>\n",
       "      <td>117</td>\n",
       "      <td>26.99</td>\n",
       "      <td>G</td>\n",
       "      <td>Commentaries,Behind the Scenes</td>\n",
       "      <td>2006-02-15 05:03:42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>AFRICAN EGG</td>\n",
       "      <td>A Fast-Paced Documentary of a Pastry Chef And ...</td>\n",
       "      <td>2006</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>6</td>\n",
       "      <td>2.99</td>\n",
       "      <td>130</td>\n",
       "      <td>22.99</td>\n",
       "      <td>G</td>\n",
       "      <td>Deleted Scenes</td>\n",
       "      <td>2006-02-15 05:03:42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id             title  \\\n",
       "0        1  ACADEMY DINOSAUR   \n",
       "1        2    ACE GOLDFINGER   \n",
       "2        3  ADAPTATION HOLES   \n",
       "3        4  AFFAIR PREJUDICE   \n",
       "4        5       AFRICAN EGG   \n",
       "\n",
       "                                         description  release_year  \\\n",
       "0  A Epic Drama of a Feminist And a Mad Scientist...          2006   \n",
       "1  A Astounding Epistle of a Database Administrat...          2006   \n",
       "2  A Astounding Reflection of a Lumberjack And a ...          2006   \n",
       "3  A Fanciful Documentary of a Frisbee And a Lumb...          2006   \n",
       "4  A Fast-Paced Documentary of a Pastry Chef And ...          2006   \n",
       "\n",
       "   language_id original_language_id  rental_duration  rental_rate  length  \\\n",
       "0            1                 None                6         0.99      86   \n",
       "1            1                 None                3         4.99      48   \n",
       "2            1                 None                7         2.99      50   \n",
       "3            1                 None                5         2.99     117   \n",
       "4            1                 None                6         2.99     130   \n",
       "\n",
       "   replacement_cost rating                  special_features  \\\n",
       "0             20.99     PG  Deleted Scenes,Behind the Scenes   \n",
       "1             12.99      G           Trailers,Deleted Scenes   \n",
       "2             18.99  NC-17           Trailers,Deleted Scenes   \n",
       "3             26.99      G    Commentaries,Behind the Scenes   \n",
       "4             22.99      G                    Deleted Scenes   \n",
       "\n",
       "          last_update  \n",
       "0 2006-02-15 05:03:42  \n",
       "1 2006-02-15 05:03:42  \n",
       "2 2006-02-15 05:03:42  \n",
       "3 2006-02-15 05:03:42  \n",
       "4 2006-02-15 05:03:42  "
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query_1 = 'select * from film'\n",
    "data_film = pd.read_sql_query(query_1, engine)\n",
    "data_film.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "1f248361-1534-4632-bd62-1680e178bea5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>rental_id</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>inventory_id</th>\n",
       "      <th>customer_id</th>\n",
       "      <th>return_date</th>\n",
       "      <th>staff_id</th>\n",
       "      <th>last_update</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>367</td>\n",
       "      <td>130</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>1525</td>\n",
       "      <td>459</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2005-05-24 23:03:39</td>\n",
       "      <td>1711</td>\n",
       "      <td>408</td>\n",
       "      <td>2005-06-01 22:12:39</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2005-05-24 23:04:41</td>\n",
       "      <td>2452</td>\n",
       "      <td>333</td>\n",
       "      <td>2005-06-03 01:43:41</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2005-05-24 23:05:21</td>\n",
       "      <td>2079</td>\n",
       "      <td>222</td>\n",
       "      <td>2005-06-02 04:33:21</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 21:30:53</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   rental_id         rental_date  inventory_id  customer_id  \\\n",
       "0          1 2005-05-24 22:53:30           367          130   \n",
       "1          2 2005-05-24 22:54:33          1525          459   \n",
       "2          3 2005-05-24 23:03:39          1711          408   \n",
       "3          4 2005-05-24 23:04:41          2452          333   \n",
       "4          5 2005-05-24 23:05:21          2079          222   \n",
       "\n",
       "          return_date  staff_id         last_update  \n",
       "0 2005-05-26 22:04:30         1 2006-02-15 21:30:53  \n",
       "1 2005-05-28 19:40:33         1 2006-02-15 21:30:53  \n",
       "2 2005-06-01 22:12:39         1 2006-02-15 21:30:53  \n",
       "3 2005-06-03 01:43:41         2 2006-02-15 21:30:53  \n",
       "4 2005-06-02 04:33:21         1 2006-02-15 21:30:53  "
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query_2 = 'select * from rental'\n",
    "data_rental = pd.read_sql_query(query_2, engine)\n",
    "data_rental.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "e909b958-ba63-4741-b918-edb4c076fd77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>inventory_id</th>\n",
       "      <th>film_id</th>\n",
       "      <th>store_id</th>\n",
       "      <th>last_update</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 05:09:17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 05:09:17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 05:09:17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2006-02-15 05:09:17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2006-02-15 05:09:17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   inventory_id  film_id  store_id         last_update\n",
       "0             1        1         1 2006-02-15 05:09:17\n",
       "1             2        1         1 2006-02-15 05:09:17\n",
       "2             3        1         1 2006-02-15 05:09:17\n",
       "3             4        1         1 2006-02-15 05:09:17\n",
       "4             5        1         2 2006-02-15 05:09:17"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "query_3 = 'select * from inventory'\n",
    "data_inventory = pd.read_sql_query(query_3, engine)\n",
    "data_inventory.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "fbcbdae2-05bd-4444-8c03-a06af575be84",
   "metadata": {},
   "outputs": [],
   "source": [
    "connection_string = 'mysql+pymysql://root:'+password+'@localhost/sakila'\n",
    "engine = create_engine(connection_string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "935ef5f1-4d25-42eb-85ab-79616160a0fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>title</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>rating</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>return_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>80</td>\n",
       "      <td>BLANKET BEVERLY</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>148</td>\n",
       "      <td>21.99</td>\n",
       "      <td>G</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>333</td>\n",
       "      <td>FREAKY POCUS</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>126</td>\n",
       "      <td>16.99</td>\n",
       "      <td>R</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>373</td>\n",
       "      <td>GRADUATE LORD</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>156</td>\n",
       "      <td>14.99</td>\n",
       "      <td>G</td>\n",
       "      <td>2005-05-24 23:03:39</td>\n",
       "      <td>2005-06-01 22:12:39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>535</td>\n",
       "      <td>LOVE SUICIDES</td>\n",
       "      <td>6</td>\n",
       "      <td>0.99</td>\n",
       "      <td>181</td>\n",
       "      <td>21.99</td>\n",
       "      <td>R</td>\n",
       "      <td>2005-05-24 23:04:41</td>\n",
       "      <td>2005-06-03 01:43:41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>450</td>\n",
       "      <td>IDOLS SNATCHERS</td>\n",
       "      <td>5</td>\n",
       "      <td>2.99</td>\n",
       "      <td>84</td>\n",
       "      <td>29.99</td>\n",
       "      <td>NC-17</td>\n",
       "      <td>2005-05-24 23:05:21</td>\n",
       "      <td>2005-06-02 04:33:21</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id            title  rental_duration  rental_rate  length  \\\n",
       "0       80  BLANKET BEVERLY                7         2.99     148   \n",
       "1      333     FREAKY POCUS                7         2.99     126   \n",
       "2      373    GRADUATE LORD                7         2.99     156   \n",
       "3      535    LOVE SUICIDES                6         0.99     181   \n",
       "4      450  IDOLS SNATCHERS                5         2.99      84   \n",
       "\n",
       "   replacement_cost rating         rental_date         return_date  \n",
       "0             21.99      G 2005-05-24 22:53:30 2005-05-26 22:04:30  \n",
       "1             16.99      R 2005-05-24 22:54:33 2005-05-28 19:40:33  \n",
       "2             14.99      G 2005-05-24 23:03:39 2005-06-01 22:12:39  \n",
       "3             21.99      R 2005-05-24 23:04:41 2005-06-03 01:43:41  \n",
       "4             29.99  NC-17 2005-05-24 23:05:21 2005-06-02 04:33:21  "
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a query or queries to extract the information you think may be relevant for building the prediction model. It should include some film features and some rental features\n",
    "#Read the data into a Pandas dataframe\n",
    "\n",
    "query = '''SELECT f.film_id, f.title, f.rental_duration, f.rental_rate, f.length, f.replacement_cost, f.rating,\n",
    "       r.rental_date, r.return_date\n",
    "FROM film AS f\n",
    "JOIN inventory AS i ON f.film_id = i.film_id\n",
    "JOIN rental AS r ON i.inventory_id = r.inventory_id\n",
    "WHERE r.rental_date >= DATE_SUB(DATE(r.rental_date), INTERVAL DAY(DATE(r.rental_date)) - 1 DAY)\n",
    "      AND r.rental_date < DATE_ADD(DATE_SUB(DATE(r.rental_date), INTERVAL DAY(DATE(r.rental_date)) - 1 DAY), INTERVAL 1 MONTH)'''\n",
    "#Read the data into a Pandas dataframe.\n",
    "data = pd.read_sql_query(query, engine)\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "af6e972f-be29-4a30-bb49-46380a8d8ee1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16047, 9)"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "a685e611-9a2a-4608-960c-bfa215a92c19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "film_id                      int64\n",
       "title                       object\n",
       "rental_duration              int64\n",
       "rental_rate                float64\n",
       "length                       int64\n",
       "replacement_cost           float64\n",
       "rating                      object\n",
       "rental_date         datetime64[ns]\n",
       "return_date         datetime64[ns]\n",
       "dtype: object"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Analyze extracted features and transform them. You may need to encode some categorical variables, or scale numerical variables\n",
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "554cea11-edfa-4317-a33b-554900b808a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "film_id               0\n",
       "title                 0\n",
       "rental_duration       0\n",
       "rental_rate           0\n",
       "length                0\n",
       "replacement_cost      0\n",
       "rating                0\n",
       "rental_date           0\n",
       "return_date         184\n",
       "dtype: int64"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "c04541d1-7feb-4e3d-af95-11a2dedfb11c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>15863.000000</td>\n",
       "      <td>15863.000000</td>\n",
       "      <td>15863.000000</td>\n",
       "      <td>15863.000000</td>\n",
       "      <td>15863.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>501.225241</td>\n",
       "      <td>4.936897</td>\n",
       "      <td>2.944359</td>\n",
       "      <td>114.986131</td>\n",
       "      <td>20.223815</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>288.448198</td>\n",
       "      <td>1.401717</td>\n",
       "      <td>1.649822</td>\n",
       "      <td>40.119239</td>\n",
       "      <td>6.083943</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.990000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>9.990000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>255.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.990000</td>\n",
       "      <td>81.000000</td>\n",
       "      <td>14.990000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>498.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.990000</td>\n",
       "      <td>114.000000</td>\n",
       "      <td>20.990000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>753.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4.990000</td>\n",
       "      <td>148.000000</td>\n",
       "      <td>25.990000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>4.990000</td>\n",
       "      <td>185.000000</td>\n",
       "      <td>29.990000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            film_id  rental_duration   rental_rate        length  \\\n",
       "count  15863.000000     15863.000000  15863.000000  15863.000000   \n",
       "mean     501.225241         4.936897      2.944359    114.986131   \n",
       "std      288.448198         1.401717      1.649822     40.119239   \n",
       "min        1.000000         3.000000      0.990000     46.000000   \n",
       "25%      255.000000         4.000000      0.990000     81.000000   \n",
       "50%      498.000000         5.000000      2.990000    114.000000   \n",
       "75%      753.000000         6.000000      4.990000    148.000000   \n",
       "max     1000.000000         7.000000      4.990000    185.000000   \n",
       "\n",
       "       replacement_cost  \n",
       "count      15863.000000  \n",
       "mean          20.223815  \n",
       "std            6.083943  \n",
       "min            9.990000  \n",
       "25%           14.990000  \n",
       "50%           20.990000  \n",
       "75%           25.990000  \n",
       "max           29.990000  "
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = data[data['return_date'].isna()==False]  #tomamos solo las filas donde hay valores nulos en return_date, seria lo mismo que elimnar las filas donde hay valores nulos\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "96c5a7df-cb5b-4ed1-9338-877f5dd9890a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0             blanket beverly\n",
       "1                freaky pocus\n",
       "2               graduate lord\n",
       "3               love suicides\n",
       "4             idols snatchers\n",
       "                 ...         \n",
       "16041         illusion amelie\n",
       "16042    hunchback impossible\n",
       "16043              mob duffel\n",
       "16044          ace goldfinger\n",
       "16045          ace goldfinger\n",
       "Name: title, Length: 15863, dtype: object"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Standardization of the film_title\n",
    "def title_fix(x):\n",
    "    x = x.lower()\n",
    "    return x\n",
    "data['title'] = data['title'].apply(title_fix)\n",
    "data['title']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "016a964b-5745-4620-9e9b-36426ec42be6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0            g\n",
       "1            r\n",
       "2            g\n",
       "3            r\n",
       "4        nc-17\n",
       "         ...  \n",
       "16041        r\n",
       "16042    pg-13\n",
       "16043        g\n",
       "16044        g\n",
       "16045        g\n",
       "Name: rating, Length: 15863, dtype: object"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def rating_fix(x):\n",
    "    x = x.lower()\n",
    "    return x   \n",
    "data['rating'] = data['rating'].apply(rating_fix)\n",
    "data['rating']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "7f2c6b30-1fb8-4749-b087-20942afbc680",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>title</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>rating</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>return_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>80</td>\n",
       "      <td>blanket beverly</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>148</td>\n",
       "      <td>21.99</td>\n",
       "      <td>g</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>333</td>\n",
       "      <td>freaky pocus</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>126</td>\n",
       "      <td>16.99</td>\n",
       "      <td>r</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>373</td>\n",
       "      <td>graduate lord</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>156</td>\n",
       "      <td>14.99</td>\n",
       "      <td>g</td>\n",
       "      <td>2005-05-24 23:03:39</td>\n",
       "      <td>2005-06-01 22:12:39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>535</td>\n",
       "      <td>love suicides</td>\n",
       "      <td>6</td>\n",
       "      <td>0.99</td>\n",
       "      <td>181</td>\n",
       "      <td>21.99</td>\n",
       "      <td>r</td>\n",
       "      <td>2005-05-24 23:04:41</td>\n",
       "      <td>2005-06-03 01:43:41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>450</td>\n",
       "      <td>idols snatchers</td>\n",
       "      <td>5</td>\n",
       "      <td>2.99</td>\n",
       "      <td>84</td>\n",
       "      <td>29.99</td>\n",
       "      <td>nc-17</td>\n",
       "      <td>2005-05-24 23:05:21</td>\n",
       "      <td>2005-06-02 04:33:21</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id            title  rental_duration  rental_rate  length  \\\n",
       "0       80  blanket beverly                7         2.99     148   \n",
       "1      333     freaky pocus                7         2.99     126   \n",
       "2      373    graduate lord                7         2.99     156   \n",
       "3      535    love suicides                6         0.99     181   \n",
       "4      450  idols snatchers                5         2.99      84   \n",
       "\n",
       "   replacement_cost rating         rental_date         return_date  \n",
       "0             21.99      g 2005-05-24 22:53:30 2005-05-26 22:04:30  \n",
       "1             16.99      r 2005-05-24 22:54:33 2005-05-28 19:40:33  \n",
       "2             14.99      g 2005-05-24 23:03:39 2005-06-01 22:12:39  \n",
       "3             21.99      r 2005-05-24 23:04:41 2005-06-03 01:43:41  \n",
       "4             29.99  nc-17 2005-05-24 23:05:21 2005-06-02 04:33:21  "
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "7cf4bdb9-918f-4d75-b64c-b77b4b6923f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='rating', ylabel='count'>"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = data['rating'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ecfaf0b-d815-4ba1-bc03-8e95205da8ee",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "9ba5f4e9-9bb9-4a9d-8531-d8746159ea57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='film_id', ylabel='count'>"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x = data['film_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "0178fb3c-4de9-4265-a37c-751c76585630",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# correlacion entre features numéricas\n",
    "corr_matrix=data.corr(method='pearson')  # default\n",
    "fig, ax = plt.subplots(figsize=(10, 8))\n",
    "ax = sns.heatmap(corr_matrix, annot=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "aacf4763-396e-48cc-8f14-061329cfc540",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.99    5582\n",
       "4.99    5220\n",
       "2.99    5061\n",
       "Name: rental_rate, dtype: int64"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['rental_rate'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "f10f21d1-8755-484b-b505-2e080f27e7dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 250x100 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 250x100 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 250x100 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAeoAAAH+CAYAAABTKk23AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8qNh9FAAAACXBIWXMAAA9hAAAPYQGoP6dpAABZHklEQVR4nO3deXxTZb4/8M/J2j3d6AaFFigVKDsIRRSUVWVR9KqD0x8qoygKMuLFQUcpXi84zgg4MOLGACMwjHcUR52xssi+U6lstWwFWui+pHvSJuf3R5pDS1vomnOSfN6vm9elydPkmzMxnz7Pec7zCKIoiiAiIiJFUsldABERETWNQU1ERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECsagJiIiUjAGNRERkYIxqImIiBSMQU1EAIDr168jMTERKSkprX6O3bt3QxAE7N69u93qao6KigokJiY6/HWJHIFBTUQAbEG9ZMmSNgW1XCoqKrBkyRIGNbkkBjWRE6qoqJC7hA5VXV2NmpoaucsgUgQGNZHCJSYmQhAE/PTTT3j00UcREBCAHj16QBRFfPjhhxg4cCA8PT0REBCARx99FJcuXar3+2PGjEFcXByOHTuGu+++G15eXujevTveffddWK1WALYh62HDhgEAnn76aQiCAEEQkJiYCAA4fvw4nnjiCURFRcHT0xNRUVH41a9+hStXrrT5/dmHyz///HMsWLAAnTt3hl6vx4ULF5CXl4c5c+agT58+8PHxQUhICO677z7s27dP+v3Lly+jU6dOAIAlS5ZItT/11FNSm/Pnz2PGjBkICQmBXq9H79698Ze//KXNtRM5gkbuAoioeaZPn44nnngCzz//PMrLyzF79mysX78e8+bNwx/+8AcUFhbi7bffxsiRI/Hzzz8jNDRU+t3s7Gw8+eSTWLBgARYvXoytW7di0aJFiIiIwP/7f/8PgwcPxrp16/D000/j97//PR588EEAQJcuXQDYwjA2NhZPPPEEAgMDkZWVhTVr1mDYsGE4e/YsgoOD2/z+Fi1ahPj4eHz00UdQqVQICQlBXl4eAGDx4sUICwtDWVkZtm7dijFjxmDnzp0YM2YMwsPDkZSUhEmTJmHWrFn4zW9+AwBSeJ89exYjR45E165d8f777yMsLAw//PAD5s2bh/z8fCxevLjNtRN1KJGIFG3x4sUiAPGtt96S7jt06JAIQHz//ffrtc3IyBA9PT3FhQsXSveNHj1aBCAeOXKkXts+ffqIEydOlH4+duyYCEBct27dbWuqqakRy8rKRG9vb/GDDz6Q7t+1a5cIQNy1a1ez35/9d+65555mvW51dbU4duxY8eGHH5buz8vLEwGIixcvbvA7EydOFLt06SIajcZ697/00kuih4eHWFhY2OxaieTAoW8iJ/HII49I//7uu+8gCAJ+/etfo6amRrqFhYVhwIABDSZVhYWF4c4776x3X//+/Zs9dF1WVobXXnsNPXv2hEajgUajgY+PD8rLy5Gamtrm9wbUf391ffTRRxg8eDA8PDyg0Wig1Wqxc+fOZr1uVVUVdu7ciYcffhheXl71jtUDDzyAqqoqHD58uF3qJ+ooHPomchLh4eHSv3NyciCKYr3h7bq6d+9e7+egoKAGbfR6PSorK5v12jNmzMDOnTvx5ptvYtiwYfDz84MgCHjggQea/Ry3U/f92S1fvhwLFizA888/j//5n/9BcHAw1Go13nzzzWYFdUFBAWpqarBq1SqsWrWq0Tb5+fltrp2oIzGoiZyEIAjSv4ODgyEIAvbt2we9Xt+gbWP3tZbRaMR3332HxYsX43e/+510v8lkQmFhYbu9Tt33Z7dx40aMGTMGa9asqXd/aWlps54zICAAarUaCQkJePHFFxttEx0d3fJiiRyIQU3khCZPnox3330X165dw2OPPdYuz2kP95t7yIIgQBTFBuH/2WefwWKxtMtrN0UQhAave/LkSRw6dAiRkZHSfU3V7uXlhXvvvRcnTpxA//79odPpOrReoo7AoCZyQnfddReee+45PP300zh+/DjuueceeHt7IysrC/v370e/fv3wwgsvtOg5e/ToAU9PT2zatAm9e/eGj48PIiIiEBERgXvuuQd//OMfERwcjKioKOzZswdr166Fv79/x7zBWpMnT8b//M//YPHixRg9ejTS0tLw9ttvIzo6ut511r6+vujWrRv+9a9/YezYsQgMDJRq/eCDDzBq1CjcfffdeOGFFxAVFYXS0lJcuHAB3377LX788ccOfQ9EbcXJZERO6uOPP8bq1auxd+9ePPHEE3jwwQfx1ltvoby8vMHEsebw8vLCX//6VxQUFGDChAkYNmwYPvnkEwDA5s2bce+992LhwoWYPn06jh8/ju3bt8NgMLT326rnjTfewIIFC7B27Vo8+OCD+Oyzz/DRRx9h1KhRDdquXbsWXl5emDp1KoYNGyZdA96nTx/89NNPiIuLw+9//3tMmDABs2bNwj//+U+MHTu2Q+snag+CKIqi3EUQERFR49ijJiIiUjCeoyaiDiGK4m0nm6nV6kZnexPRDexRE1GH2LNnD7Ra7S1vGzZskLtMIsXjOWoi6hClpaVIS0u7ZZvo6OhGF2MhohsY1ERERArGoW8iIiIFY1A3kyiKKCkpAQcgiIjIkRjUzVRaWgqDwdDsNYaJiIjaA4OaiIhIwRjURERECsagJiIiUjAGNRERkYIxqImIiBSMQU1ERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECsagJiIiUjAGNRERkYIxqImIiBSMQU1ERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECqaRuwB3dPXqVeTn53foawQHB6Nr164d+hpERNTxGNQOdvXqVdzRuzcqKyo69HU8vbzwS2oqw5qIyMkxqB0sPz8flRUVePK1PyK0a48OeY2cqxex6Q//jfz8fAY1EZGTY1DLJLRrD3SJ6St3GUREpHCcTEZERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECsagJiIiUjAGNRERkYIxqImIiBSMQU1ERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECsagJiIiUjAGNRERkYIxqImIiBSMQU1ERKRgDGoiIiIFY1ATEREpGIOaiIhIwRjURERECsagJiIiUjAGNRERkYJp5C6AiIiovVy9ehX5+fkd+hrBwcHo2rVrh75GXQxqIiJyCVevXsUdvXujsqKiQ1/H08sLv6SmOiysGdREROQS8vPzUVlRgSdf+yNCu/bokNfIuXoRm/7w38jPz2dQExERtUZo1x7oEtNX7jLaDSeTERERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYLyOmohuyRWXZCRyJgxqImqSqy7JSORMZA3qxMRELFmypN59oaGhyM7OBgCIooglS5bgk08+QVFREYYPH46//OUv6Nv3xoozJpMJr776Kv7+97+jsrISY8eOxYcffoguXbpIbYqKijBv3jx88803AICpU6di1apV8Pf37/g3SeTEXHVJRiJnInuPum/fvtixY4f0s1qtlv793nvvYfny5Vi/fj169eqFd955B+PHj0daWhp8fX0BAPPnz8e3336LLVu2ICgoCAsWLMDkyZORnJwsPdeMGTOQmZmJpKQkAMBzzz2HhIQEfPvttw58p0TOy9WWZCRyJrIHtUajQVhYWIP7RVHEypUr8cYbb2D69OkAgA0bNiA0NBSbN2/G7NmzYTQasXbtWnz++ecYN24cAGDjxo2IjIzEjh07MHHiRKSmpiIpKQmHDx/G8OHDAQCffvop4uPjkZaWhtjYWMe9WSIiohaSfdb3+fPnERERgejoaDzxxBO4dOkSACA9PR3Z2dmYMGGC1Fav12P06NE4ePAgACA5ORnV1dX12kRERCAuLk5qc+jQIRgMBimkAWDEiBEwGAxSm8aYTCaUlJTUuxERETmarEE9fPhw/O1vf8MPP/yATz/9FNnZ2Rg5ciQKCgqk89ShoaH1fqfuOezs7GzodDoEBATcsk1ISEiD1w4JCZHaNGbZsmUwGAzSLTIysk3vlYiIqDVkDer7778fjzzyCPr164dx48bh3//+NwDbELedIAj1fkcUxQb33ezmNo21v93zLFq0CEajUbplZGQ06z0RERG1J9mHvuvy9vZGv379cP78eem89c293tzcXKmXHRYWBrPZjKKiolu2ycnJafBaeXl5DXrrden1evj5+dW7EREROZqigtpkMiE1NRXh4eGIjo5GWFgYtm/fLj1uNpuxZ88ejBw5EgAwZMgQaLXaem2ysrJw+vRpqU18fDyMRiOOHj0qtTly5AiMRqPUhoiISKlknfX96quvYsqUKejatStyc3PxzjvvoKSkBDNnzoQgCJg/fz6WLl2KmJgYxMTEYOnSpfDy8sKMGTMAAAaDAbNmzcKCBQsQFBSEwMBAvPrqq9JQOgD07t0bkyZNwrPPPouPP/4YgO3yrMmTJ3PGNxERKZ6sQZ2ZmYlf/epXyM/PR6dOnTBixAgcPnwY3bp1AwAsXLgQlZWVmDNnjrTgybZt26RrqAFgxYoV0Gg0eOyxx6QFT9avX1/veuxNmzZh3rx50uzwqVOnYvXq1Y59s0RERK0ga1Bv2bLllo8LgoDExEQkJiY22cbDwwOrVq3CqlWrmmwTGBiIjRs3trZMIiIi2SjqHDURERHVx6AmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGAMaiIiIgVjUBMRESkYg5qIiEjBGNREREQKxqAmIiJSMAY1ERGRgjGoiYiIFIxBTUREpGCKCeply5ZBEATMnz9fuk8URSQmJiIiIgKenp4YM2YMzpw5U+/3TCYT5s6di+DgYHh7e2Pq1KnIzMys16aoqAgJCQkwGAwwGAxISEhAcXGxA94VERFR2ygiqI8dO4ZPPvkE/fv3r3f/e++9h+XLl2P16tU4duwYwsLCMH78eJSWlkpt5s+fj61bt2LLli3Yv38/ysrKMHnyZFgsFqnNjBkzkJKSgqSkJCQlJSElJQUJCQkOe39EREStJXtQl5WV4cknn8Snn36KgIAA6X5RFLFy5Uq88cYbmD59OuLi4rBhwwZUVFRg8+bNAACj0Yi1a9fi/fffx7hx4zBo0CBs3LgRp06dwo4dOwAAqampSEpKwmeffYb4+HjEx8fj008/xXfffYe0tDRZ3jMREVFzyR7UL774Ih588EGMGzeu3v3p6enIzs7GhAkTpPv0ej1Gjx6NgwcPAgCSk5NRXV1dr01ERATi4uKkNocOHYLBYMDw4cOlNiNGjIDBYJDaNMZkMqGkpKTejYiIyNE0cr74li1bkJycjOPHjzd4LDs7GwAQGhpa7/7Q0FBcuXJFaqPT6er1xO1t7L+fnZ2NkJCQBs8fEhIitWnMsmXLsGTJkpa9ISIionYmW486IyMDL7/8MjZt2gQPD48m2wmCUO9nURQb3Hezm9s01v52z7No0SIYjUbplpGRccvXJCIi6giyBXVycjJyc3MxZMgQaDQaaDQa7NmzB3/+85+h0WiknvTNvd7c3FzpsbCwMJjNZhQVFd2yTU5OToPXz8vLa9Bbr0uv18PPz6/ejYiIyNFkC+qxY8fi1KlTSElJkW5Dhw7Fk08+iZSUFHTv3h1hYWHYvn279Dtmsxl79uzByJEjAQBDhgyBVqut1yYrKwunT5+W2sTHx8NoNOLo0aNSmyNHjsBoNEptiIiIlEq2c9S+vr6Ii4urd5+3tzeCgoKk++fPn4+lS5ciJiYGMTExWLp0Kby8vDBjxgwAgMFgwKxZs7BgwQIEBQUhMDAQr776Kvr16ydNTuvduzcmTZqEZ599Fh9//DEA4LnnnsPkyZMRGxvrwHdMRETUcrJOJrudhQsXorKyEnPmzEFRURGGDx+Obdu2wdfXV2qzYsUKaDQaPPbYY6isrMTYsWOxfv16qNVqqc2mTZswb948aXb41KlTsXr1aoe/HyIiopZSVFDv3r273s+CICAxMRGJiYlN/o6HhwdWrVqFVatWNdkmMDAQGzdubKcqiYiIHEf266iJiIioaQxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArGoCYiIlIwBjUREZGCMaiJiIgUjEFNRESkYAxqIiIiBWNQExERKRiDmoiISMEY1ERERArWqqDu3r07CgoKGtxfXFyM7t27t7koIiIismlVUF++fBkWi6XB/SaTCdeuXWtzUURERGSjaUnjb775Rvr3Dz/8AIPBIP1ssViwc+dOREVFtVtxRERE7q5FQf3QQw8BAARBwMyZM+s9ptVqERUVhffff7/diiMiInJ3LQpqq9UKAIiOjsaxY8cQHBzcIUURERGRTYuC2i49Pb296yAiIqJGtCqoAWDnzp3YuXMncnNzpZ623V//+tc2F0ZEREStDOolS5bg7bffxtChQxEeHg5BENq7LiIiIkIrg/qjjz7C+vXrkZCQ0N71EBERUR2tuo7abDZj5MiRbX7xNWvWoH///vDz84Ofnx/i4+Px/fffS4+LoojExERERETA09MTY8aMwZkzZ+o9h8lkwty5cxEcHAxvb29MnToVmZmZ9doUFRUhISEBBoMBBoMBCQkJKC4ubnP9REREHa1VQf2b3/wGmzdvbvOLd+nSBe+++y6OHz+O48eP47777sO0adOkMH7vvfewfPlyrF69GseOHUNYWBjGjx+P0tJS6Tnmz5+PrVu3YsuWLdi/fz/KysowefLkeguyzJgxAykpKUhKSkJSUhJSUlI4GkBERE6hVUPfVVVV+OSTT7Bjxw70798fWq223uPLly9v1vNMmTKl3s//+7//izVr1uDw4cPo06cPVq5ciTfeeAPTp08HAGzYsAGhoaHYvHkzZs+eDaPRiLVr1+Lzzz/HuHHjAAAbN25EZGQkduzYgYkTJyI1NRVJSUk4fPgwhg8fDgD49NNPER8fj7S0NMTGxrbmEBARETlEq4L65MmTGDhwIADg9OnT9R5r7cQyi8WC//u//0N5eTni4+ORnp6O7OxsTJgwQWqj1+sxevRoHDx4ELNnz0ZycjKqq6vrtYmIiEBcXBwOHjyIiRMn4tChQzAYDFJIA8CIESNgMBhw8ODBJoPaZDLBZDJJP5eUlLTqfREREbVFq4J6165d7VbAqVOnEB8fj6qqKvj4+GDr1q3o06cPDh48CAAIDQ2t1z40NBRXrlwBAGRnZ0On0yEgIKBBm+zsbKlNSEhIg9cNCQmR2jRm2bJlWLJkSZveGxERUVvJvs1lbGwsUlJScPjwYbzwwguYOXMmzp49Kz1+cw9dFMXb9tpvbtNY+9s9z6JFi2A0GqVbRkZGc98SERFRu2lVj/ree++9Zcj9+OOPzX4unU6Hnj17AgCGDh2KY8eO4YMPPsBrr70GwNYjDg8Pl9rn5uZKveywsDCYzWYUFRXV61Xn5uZKs9LDwsKQk5PT4HXz8vIa9Nbr0uv10Ov1zX4fREREHaFVPeqBAwdiwIAB0q1Pnz4wm8346aef0K9fvzYVJIoiTCYToqOjERYWhu3bt0uPmc1m7NmzRwrhIUOGQKvV1muTlZWF06dPS23i4+NhNBpx9OhRqc2RI0dgNBrb5RIzIiKijtSqHvWKFSsavT8xMRFlZWXNfp7XX38d999/PyIjI1FaWootW7Zg9+7dSEpKgiAImD9/PpYuXYqYmBjExMRg6dKl8PLywowZMwAABoMBs2bNwoIFCxAUFITAwEC8+uqr6NevnzQLvHfv3pg0aRKeffZZfPzxxwCA5557DpMnT+aMbyIiUrxWr/XdmF//+te488478ac//alZ7XNycpCQkICsrCwYDAb0798fSUlJGD9+PABg4cKFqKysxJw5c1BUVIThw4dj27Zt8PX1lZ5jxYoV0Gg0eOyxx1BZWYmxY8di/fr1UKvVUptNmzZh3rx50uzwqVOnYvXq1e34zomIiDpGuwb1oUOH4OHh0ez2a9euveXjgiAgMTERiYmJTbbx8PDAqlWrsGrVqibbBAYGYuPGjc2ui4iISClaFdT2BUjsRFFEVlYWjh8/jjfffLNdCiMiIqJWBrXBYKj3s0qlQmxsLN5+++16i48QERFR27QqqNetW9fedRAREVEj2nSOOjk5GampqRAEAX369MGgQYPaqy4iIiJCK4M6NzcXTzzxBHbv3g1/f3+Iogij0Yh7770XW7ZsQadOndq7TiIiIrfUqgVP5s6di5KSEpw5cwaFhYUoKirC6dOnUVJSgnnz5rV3jURERG6rVT3qpKQk7NixA71795bu69OnD/7yl79wMhkREVE7alWP2mq1NtiDGgC0Wi2sVmubiyIiIiKbVgX1fffdh5dffhnXr1+X7rt27Rp++9vfYuzYse1WHBERkbtrVVCvXr0apaWliIqKQo8ePdCzZ09ER0ejtLT0liuEERERUcu06hx1ZGQkfvrpJ2zfvh2//PILRFFEnz59pI0wiIiIqH20qEf9448/ok+fPigpKQEAjB8/HnPnzsW8efMwbNgw9O3bF/v27euQQomIiNxRi4J65cqVePbZZ+Hn59fgMYPBgNmzZ2P58uXtVhwREZG7a1FQ//zzz5g0aVKTj0+YMAHJycltLoqIiIhsWhTUOTk5jV6WZafRaJCXl9fmooiIiMimRUHduXNnnDp1qsnHT548ifDw8DYXRURERDYtCuoHHngAb731Fqqqqho8VllZicWLF2Py5MntVhwREZG7a9HlWb///e/x1VdfoVevXnjppZcQGxsLQRCQmpqKv/zlL7BYLHjjjTc6qlYiIiK306KgDg0NxcGDB/HCCy9g0aJFEEUR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",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 250x100 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "numerical_columns = ['film_id', 'rental_duration', 'rental_rate', 'replacement_cost']\n",
    "\n",
    "for col in numerical_columns:\n",
    "    plt.figure(figsize=(2.5,1))\n",
    "    sns.displot(data[col], kde=True)    \n",
    "    plt.title(col)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "fc4e0b0b-1893-4aaf-b663-9c179f2685b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Split data\n",
    "\n",
    "data_cat = data.select_dtypes(include = object)\n",
    "data_num = data.select_dtypes(exclude = object) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "8338eb5f-d46d-4072-bb55-eda793659f6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>rating</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>blanket beverly</td>\n",
       "      <td>g</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>freaky pocus</td>\n",
       "      <td>r</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             title rating\n",
       "0  blanket beverly      g\n",
       "1     freaky pocus      r"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_cat.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "2b5a1d61-94bd-4546-b43d-c941879d6a7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>return_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>80</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>148</td>\n",
       "      <td>21.99</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>333</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>126</td>\n",
       "      <td>16.99</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id  rental_duration  rental_rate  length  replacement_cost  \\\n",
       "0       80                7         2.99     148             21.99   \n",
       "1      333                7         2.99     126             16.99   \n",
       "\n",
       "          rental_date         return_date  \n",
       "0 2005-05-24 22:53:30 2005-05-26 22:04:30  \n",
       "1 2005-05-24 22:54:33 2005-05-28 19:40:33  "
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_num.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "288d653e-4d59-42c4-b328-80cc9df3246e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title_ace goldfinger</th>\n",
       "      <th>title_adaptation holes</th>\n",
       "      <th>title_affair prejudice</th>\n",
       "      <th>title_african egg</th>\n",
       "      <th>title_agent truman</th>\n",
       "      <th>title_airplane sierra</th>\n",
       "      <th>title_airport pollock</th>\n",
       "      <th>title_alabama devil</th>\n",
       "      <th>title_aladdin calendar</th>\n",
       "      <th>title_alamo videotape</th>\n",
       "      <th>...</th>\n",
       "      <th>title_yentl idaho</th>\n",
       "      <th>title_young language</th>\n",
       "      <th>title_youth kick</th>\n",
       "      <th>title_zhivago core</th>\n",
       "      <th>title_zoolander fiction</th>\n",
       "      <th>title_zorro ark</th>\n",
       "      <th>rating_nc-17</th>\n",
       "      <th>rating_pg</th>\n",
       "      <th>rating_pg-13</th>\n",
       "      <th>rating_r</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 961 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   title_ace goldfinger  title_adaptation holes  title_affair prejudice  \\\n",
       "0                     0                       0                       0   \n",
       "1                     0                       0                       0   \n",
       "2                     0                       0                       0   \n",
       "3                     0                       0                       0   \n",
       "4                     0                       0                       0   \n",
       "\n",
       "   title_african egg  title_agent truman  title_airplane sierra  \\\n",
       "0                  0                   0                      0   \n",
       "1                  0                   0                      0   \n",
       "2                  0                   0                      0   \n",
       "3                  0                   0                      0   \n",
       "4                  0                   0                      0   \n",
       "\n",
       "   title_airport pollock  title_alabama devil  title_aladdin calendar  \\\n",
       "0                      0                    0                       0   \n",
       "1                      0                    0                       0   \n",
       "2                      0                    0                       0   \n",
       "3                      0                    0                       0   \n",
       "4                      0                    0                       0   \n",
       "\n",
       "   title_alamo videotape  ...  title_yentl idaho  title_young language  \\\n",
       "0                      0  ...                  0                     0   \n",
       "1                      0  ...                  0                     0   \n",
       "2                      0  ...                  0                     0   \n",
       "3                      0  ...                  0                     0   \n",
       "4                      0  ...                  0                     0   \n",
       "\n",
       "   title_youth kick  title_zhivago core  title_zoolander fiction  \\\n",
       "0                 0                   0                        0   \n",
       "1                 0                   0                        0   \n",
       "2                 0                   0                        0   \n",
       "3                 0                   0                        0   \n",
       "4                 0                   0                        0   \n",
       "\n",
       "   title_zorro ark  rating_nc-17  rating_pg  rating_pg-13  rating_r  \n",
       "0                0             0          0             0         0  \n",
       "1                0             0          0             0         1  \n",
       "2                0             0          0             0         0  \n",
       "3                0             0          0             0         1  \n",
       "4                0             1          0             0         0  \n",
       "\n",
       "[5 rows x 961 columns]"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dummifing categorical columns\n",
    "X_cat_dum= pd.get_dummies(data_cat, drop_first=True)\n",
    "X_cat_dum.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "8b9a4b90-db2e-4a50-9335-09e1dd813f55",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'numpy.dtype[int64]' object does not support item assignment",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[165], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#adding month and year to the dataframe because I need them later to determine the target\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m \u001b[43mdata\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mmonth\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mmonth\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m=\u001b[39mpd\u001b[38;5;241m.\u001b[39mDatetimeIndex(data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrental_date\u001b[39m\u001b[38;5;124m'\u001b[39m])\u001b[38;5;241m.\u001b[39mmonth\n\u001b[0;32m      3\u001b[0m data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124myear\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m=\u001b[39mpd\u001b[38;5;241m.\u001b[39mDatetimeIndex(data[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mrental_date\u001b[39m\u001b[38;5;124m'\u001b[39m])\u001b[38;5;241m.\u001b[39myear\n\u001b[0;32m      4\u001b[0m data\n",
      "\u001b[1;31mTypeError\u001b[0m: 'numpy.dtype[int64]' object does not support item assignment"
     ]
    }
   ],
   "source": [
    "#adding month and year to the dataframe because I need them later to determine the target\n",
    "data['month'].dtype['month']=pd.DatetimeIndex(data['rental_date']).month\n",
    "data['year']=pd.DatetimeIndex(data['rental_date']).year\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d68bc274-6774-41f3-baf3-8ed3b2ce823f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "aeabe26e-f193-44fe-9bbe-33e0fca1c07c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>rental_date</th>\n",
       "      <th>return_date</th>\n",
       "      <th>title_ace goldfinger</th>\n",
       "      <th>title_adaptation holes</th>\n",
       "      <th>title_affair prejudice</th>\n",
       "      <th>...</th>\n",
       "      <th>title_yentl idaho</th>\n",
       "      <th>title_young language</th>\n",
       "      <th>title_youth kick</th>\n",
       "      <th>title_zhivago core</th>\n",
       "      <th>title_zoolander fiction</th>\n",
       "      <th>title_zorro ark</th>\n",
       "      <th>rating_nc-17</th>\n",
       "      <th>rating_pg</th>\n",
       "      <th>rating_pg-13</th>\n",
       "      <th>rating_r</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>80</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>148</td>\n",
       "      <td>21.99</td>\n",
       "      <td>2005-05-24 22:53:30</td>\n",
       "      <td>2005-05-26 22:04:30</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>333</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>126</td>\n",
       "      <td>16.99</td>\n",
       "      <td>2005-05-24 22:54:33</td>\n",
       "      <td>2005-05-28 19:40:33</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>373</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>156</td>\n",
       "      <td>14.99</td>\n",
       "      <td>2005-05-24 23:03:39</td>\n",
       "      <td>2005-06-01 22:12:39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 968 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id  rental_duration  rental_rate  length  replacement_cost  \\\n",
       "0       80                7         2.99     148             21.99   \n",
       "1      333                7         2.99     126             16.99   \n",
       "2      373                7         2.99     156             14.99   \n",
       "\n",
       "          rental_date         return_date  title_ace goldfinger  \\\n",
       "0 2005-05-24 22:53:30 2005-05-26 22:04:30                     0   \n",
       "1 2005-05-24 22:54:33 2005-05-28 19:40:33                     0   \n",
       "2 2005-05-24 23:03:39 2005-06-01 22:12:39                     0   \n",
       "\n",
       "   title_adaptation holes  title_affair prejudice  ...  title_yentl idaho  \\\n",
       "0                       0                       0  ...                  0   \n",
       "1                       0                       0  ...                  0   \n",
       "2                       0                       0  ...                  0   \n",
       "\n",
       "   title_young language  title_youth kick  title_zhivago core  \\\n",
       "0                     0                 0                   0   \n",
       "1                     0                 0                   0   \n",
       "2                     0                 0                   0   \n",
       "\n",
       "   title_zoolander fiction  title_zorro ark  rating_nc-17  rating_pg  \\\n",
       "0                        0                0             0          0   \n",
       "1                        0                0             0          0   \n",
       "2                        0                0             0          0   \n",
       "\n",
       "   rating_pg-13  rating_r  \n",
       "0             0         0  \n",
       "1             0         1  \n",
       "2             0         0  \n",
       "\n",
       "[3 rows x 968 columns]"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create a query to get the list of films and a boolean indicating if it was rented last month. This would be our target variable.\n",
    "#concanating numerical and categorical columns\n",
    "X = pd.concat((data_num, X_cat_dum), axis=1)\n",
    "X.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "5eee5bc6-9a24-42fc-bfb5-859789b8d61b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>film_id</th>\n",
       "      <th>rental_duration</th>\n",
       "      <th>rental_rate</th>\n",
       "      <th>length</th>\n",
       "      <th>replacement_cost</th>\n",
       "      <th>title_ace goldfinger</th>\n",
       "      <th>title_adaptation holes</th>\n",
       "      <th>title_affair prejudice</th>\n",
       "      <th>title_african egg</th>\n",
       "      <th>title_agent truman</th>\n",
       "      <th>...</th>\n",
       "      <th>title_yentl idaho</th>\n",
       "      <th>title_young language</th>\n",
       "      <th>title_youth kick</th>\n",
       "      <th>title_zhivago core</th>\n",
       "      <th>title_zoolander fiction</th>\n",
       "      <th>title_zorro ark</th>\n",
       "      <th>rating_nc-17</th>\n",
       "      <th>rating_pg</th>\n",
       "      <th>rating_pg-13</th>\n",
       "      <th>rating_r</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>80</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>148</td>\n",
       "      <td>21.99</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>333</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>126</td>\n",
       "      <td>16.99</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>373</td>\n",
       "      <td>7</td>\n",
       "      <td>2.99</td>\n",
       "      <td>156</td>\n",
       "      <td>14.99</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows × 966 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   film_id  rental_duration  rental_rate  length  replacement_cost  \\\n",
       "0       80                7         2.99     148             21.99   \n",
       "1      333                7         2.99     126             16.99   \n",
       "2      373                7         2.99     156             14.99   \n",
       "\n",
       "   title_ace goldfinger  title_adaptation holes  title_affair prejudice  \\\n",
       "0                     0                       0                       0   \n",
       "1                     0                       0                       0   \n",
       "2                     0                       0                       0   \n",
       "\n",
       "   title_african egg  title_agent truman  ...  title_yentl idaho  \\\n",
       "0                  0                   0  ...                  0   \n",
       "1                  0                   0  ...                  0   \n",
       "2                  0                   0  ...                  0   \n",
       "\n",
       "   title_young language  title_youth kick  title_zhivago core  \\\n",
       "0                     0                 0                   0   \n",
       "1                     0                 0                   0   \n",
       "2                     0                 0                   0   \n",
       "\n",
       "   title_zoolander fiction  title_zorro ark  rating_nc-17  rating_pg  \\\n",
       "0                        0                0             0          0   \n",
       "1                        0                0             0          0   \n",
       "2                        0                0             0          0   \n",
       "\n",
       "   rating_pg-13  rating_r  \n",
       "0             0         0  \n",
       "1             0         1  \n",
       "2             0         0  \n",
       "\n",
       "[3 rows x 966 columns]"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = X.drop(\"rental_date\", axis=1)\n",
    "X = X.drop(\"return_date\", axis=1)\n",
    "X.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "80958734-39a2-4d7e-a869-b96490439a55",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'month'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3629\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3628\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3629\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3630\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx:136\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx:163\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:5198\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:5206\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'month'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[156], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mX\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mmonth\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mdtype\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py:3505\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3503\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3504\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3505\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3506\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3507\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py:3631\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3629\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3630\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3631\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3632\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3633\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3634\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3635\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3636\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'month'"
     ]
    }
   ],
   "source": [
    "X['month'].dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0a15f2f8-7e16-447e-b33a-53e9237a39c6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3d67279-aefa-4a98-b158-e585caf5ca43",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "645a35b4-68c6-4bbe-9810-7575c0439fc5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3605fb8c-c066-424d-9eff-a4c6ed4f8be0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "458aefdd-86d0-40e8-b403-c84eb8cda5a5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
